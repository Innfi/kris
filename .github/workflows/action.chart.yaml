name: action.chart
on:
  push:
    branches:
      - chart/release

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./chart-api
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: module caching
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{runner.OS}}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: | 
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      
      - name: dependencies
        run: npm install

      - name: lint
        run: npm run lint

      - name: test
        run: npm test

  build:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./chart-api
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: login to ecr
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: push to ecr
        id: build-image
        env: 
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: chart-api
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t ${{ github.run_number }} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
